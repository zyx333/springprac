<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <aop:aspectj-autoproxy/>
    <context:annotation-config/>
    <context:component-scan base-package="zyx.practise.springprac.annotations"/>

    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name="location" value="conf.properties"/>
    </bean>

    <bean id="configureProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath*:conf.properties</value>
            </list>
        </property>
    </bean>

    <bean id="userDao" class="zyx.practise.springprac.UserDaoImpl"/>

    <bean id="myAspect" class="zyx.practise.springprac.aspect.MyAspect"/>

    <bean name="myAspectXML" class="zyx.practise.springprac.aspect.MyAspectXML"/>
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* zyx.practise.springprac.UserDao.updateUser(..))"/>
        <aop:pointcut id="delPointcut" expression="execution(* zyx.practise.springprac.UserDao.deleteUser(..))"/>

        <aop:aspect ref="myAspectXML" order="0">
            <aop:before method="before" pointcut-ref="pointcut"/>
            <aop:after-returning method="afterReturn" pointcut-ref="pointcut" returning="returnVal"/>
            <aop:around method="around" pointcut-ref="pointcut"/>
            <aop:after-throwing method="afterThrowing" pointcut-ref="pointcut" throwing="throwable"/>
            <aop:after method="after" pointcut-ref="pointcut"/>
        </aop:aspect>
    </aop:config>

    <bean name="accountDao" class="zyx.practise.springprac.ioc.AccountDaoImpl"/>
    <bean name="accountService" class="zyx.practise.springprac.ioc.AccountServiceImpl">
            <property name="accountDao" ref="accountDao"/>
    </bean>

    <bean name="account" class="zyx.practise.springprac.ioc.Account">
        <constructor-arg ref="accountDao"/>

        <property name="name" value="I am SpringIOC"/>
        <property name="pwd" value="123456"/>
        <property name="cities">
            <list>
                <value>beijing</value>
                <value>shanghai</value>
                <value>shenzhen</value>
            </list>
        </property>
        <property name="friends">
            <set>
                <value>zhangsan</value>
                <value>lisi</value>
                <value>wanger</value>
            </set>
        </property>
        <property name="books">
            <map>
                <entry key="10" value="CoreJava"></entry>
                <entry key="20" value="Javac"></entry>
                <entry key="30" value="Tomcat"></entry>
            </map>
        </property>
    </bean>

    <bean name="mailDao" class="zyx.practise.springprac.autowiring.MailDaoImpl"/>
    <bean name="mailDao2" autowire-candidate="false" class="zyx.practise.springprac.autowiring.MailDaoImpl"/>
    <bean name="mailDao3" class="zyx.practise.springprac.autowiring.MailDaoImpl"/>

    <bean name="mailService" autowire="byName" class="zyx.practise.springprac.autowiring.MailServiceImpl"/>
    <bean name="mailServiceCons" autowire="constructor" class="zyx.practise.springprac.autowiring.MailServiceConstructorImpl"/>
    <bean name="mailServiceAnno" class="zyx.practise.springprac.autowiring.useannotation.MailServiceAnnotationImpl"/>
    <bean name="mailServiceResource" class="zyx.practise.springprac.autowiring.useannotation.MailServiceResourceImpl"/>
</beans>